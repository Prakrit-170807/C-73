{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nvar teams = ['red', 'blue', 'green', 'yellow'];\n\nvar Look = function (_Component) {\n  _inherits(Look, _Component);\n\n  var _super = _createSuper(Look);\n\n  function Look(props) {\n    var _this;\n\n    _classCallCheck(this, Look);\n\n    _this = _super.call(this, props);\n\n    _this.SearchTransition = function _callee(SearchPhrase) {\n      var A_lphabet, FindPhrase, _FindPhrase;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              SearchPhrase = SearchPhrase.toUpperCase();\n              A_lphabet = SearchPhrase.split('')[0];\n\n              if (!(A_lphabet == 'B')) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(database.collection('Transac').where('BookID', '==', SearchPhrase).limit(5).get());\n\n            case 5:\n              FindPhrase = _context.sent;\n              FindPhrase.docs.map(function (doc) {\n                _this.setState({\n                  allTrasaction: [].concat(_toConsumableArray(_this.state.allTrasaction), [doc.data()]),\n                  lastTransaction: doc\n                });\n              });\n              _context.next = 14;\n              break;\n\n            case 9:\n              if (!(A_lphabet == 'S')) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(database.collection('Transac').where('StudentID', '==', SearchPhrase).limit(5).get());\n\n            case 12:\n              _FindPhrase = _context.sent;\n\n              _FindPhrase.docs.map(function (doc) {\n                _this.setState({\n                  allTrasaction: [].concat(_toConsumableArray(_this.state.allTrasaction), [doc.data()]),\n                  lastTransaction: doc\n                });\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      Search: \"\",\n      allTrasaction: [],\n      lastTransaction: null\n    };\n    return _this;\n  }\n\n  _createClass(Look, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(View, null, React.createElement(TextInput, {\n        style: {\n          width: 200,\n          height: 40,\n          borderWidth: 1.5,\n          fontSize: 20\n        },\n        placeholder: \"Enter BookID or StudentID\",\n        onChangeText: function onChangeText(BOOKE) {\n          _this2.setState({\n            Search: BOOKE\n          });\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this2.SearchTransition(_this2.state.Search);\n        }\n      }, \" \", React.createElement(Text, null, \" SEARCH \"), \" \")), React.createElement(FlatList, {\n        data: this.state.allTrasaction,\n        keyExtractor: function keyExtractor(item, index) {\n          index.toString;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: {\n              margin: \"10%\",\n              borderBottomWidth: 5\n            }\n          }, React.createElement(Text, null, \"BookID\" + item.BookID), React.createElement(Text, null, \"StudentID\" + item.StudentID), React.createElement(Text, null, \"Transction Type\" + item.transactionType), React.createElement(Text, null, \"Date\" + item.Date.toDate()));\n        }\n      }));\n    }\n  }]);\n\n  return Look;\n}(Component);\n\nexport { Look as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 100\n  },\n  button: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Class Projects/C-73-/components/search.js"],"names":["React","Component","teams","Look","props","SearchTransition","SearchPhrase","toUpperCase","A_lphabet","split","database","collection","where","limit","get","FindPhrase","docs","map","doc","setState","allTrasaction","state","data","lastTransaction","Search","styles","container","width","height","borderWidth","fontSize","BOOKE","button","item","index","toString","margin","borderBottomWidth","BookID","StudentID","transactionType","Date","toDate","StyleSheet","create","alignItems","justifyContent","padding","backgroundColor","borderLeftWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, StyleSheet, Button, Alert, TextInput, FlatList } from 'react-native';\nvar teams = ['red', 'blue', 'green', 'yellow'];\nexport default class Look extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Search: \"\",\n      allTrasaction: [],\n      lastTransaction: null,\n    }\n  }\n\n  SearchTransition = async (SearchPhrase) => {\n    SearchPhrase = SearchPhrase.toUpperCase();\n    var A_lphabet = SearchPhrase.split('')[0]\n\n    if (A_lphabet == 'B') {\n      const FindPhrase = await database.collection('Transac').where('BookID', '==', SearchPhrase).limit(5).get();\n      FindPhrase.docs.map(doc => {\n        this.setState({\n          allTrasaction: [...this.state.allTrasaction, doc.data()],\n          lastTransaction: doc\n        })\n      })\n    }\n    else if (A_lphabet == 'S') {\n      const FindPhrase = await database.collection('Transac').where('StudentID', '==', SearchPhrase).limit(5).get();\n      FindPhrase.docs.map(doc => {\n        this.setState({\n          allTrasaction: [...this.state.allTrasaction, doc.data()],\n          lastTransaction: doc\n        })\n      })\n    }\n\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View>\n          <TextInput\n            style={{ width: 200, height: 40, borderWidth: 1.5, fontSize: 20 }}\n            placeholder=\"Enter BookID or StudentID\"\n            onChangeText={(BOOKE) => { this.setState({ Search: BOOKE }) }}></TextInput>\n          <TouchableOpacity style={styles.button} onPress={() => { this.SearchTransition(this.state.Search) }}> <Text> SEARCH </Text> </TouchableOpacity>\n        </View>\n        <FlatList data={this.state.allTrasaction}\n          keyExtractor={(item, index) => { index.toString }}\n          renderItem={({ item }) => (\n            <View style={{ margin: \"10%\", borderBottomWidth: 5, }}>\n              <Text>{\"BookID\" + item.BookID}</Text>\n              <Text>{\"StudentID\" + item.StudentID}</Text>\n              <Text>{\"Transction Type\" + item.transactionType}</Text>\n              <Text>{\"Date\" + item.Date.toDate()}</Text>\n            </View>\n          )}/>\n      </View >\n\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 100,\n  },\n  button: {\n    backgroundColor: '#66BB6A', width: 50, borderWidth: 1.5, borderLeftWidth: 0\n  },\n});\n"]},"metadata":{},"sourceType":"module"}