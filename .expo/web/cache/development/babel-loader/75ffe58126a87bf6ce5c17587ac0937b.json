{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport firebase from \"firebase\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this);\n\n    _this.go = function _callee(mail, passPhrase) {\n      var message;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(mail, passPhrase)) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(mail, passPhrase));\n\n            case 4:\n              message = _context.sent;\n\n              if (message) {\n                _this.props.navigation.navigate(\"Transaction\");\n              }\n\n              _context.next = 17;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              _context.t1 = _context.t0.code;\n              _context.next = _context.t1 === \"YOU ARE A GHOST TO ME\" ? 13 : _context.t1 === \"BUDDY TYPE RIGHT\" ? 15 : 17;\n              break;\n\n            case 13:\n              Alert.alert(\"Ghost !!! !!!! \");\n              return _context.abrupt(\"break\", 17);\n\n            case 15:\n              Alert.alert(\"UR TYPING SUCKS!!!\");\n              return _context.abrupt(\"break\", 17);\n\n            case 17:\n              _context.next = 20;\n              break;\n\n            case 19:\n              Alert.alert(\"EMAILI AND PASSWORD PLEASE!!!!!!!!!!!\");\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    };\n\n    _this.state = {\n      mail: \"\",\n      passPhrase: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          alignContent: \"center\"\n        },\n        behavior: \"padding\"\n      }, React.createElement(View, null, React.createElement(Image, {\n        style: {\n          height: 300,\n          width: 300\n        },\n        source: require(\"../logo.png\")\n      })), React.createElement(View, null, React.createElement(TextInput, {\n        style: {\n          width: 200,\n          height: 40,\n          borderWidth: 1.5,\n          fontSize: 20\n        },\n        placeholder: \"Email ID \",\n        onChangeText: function onChangeText(mailid) {\n          return _this2.setState({\n            mail: mailid\n          });\n        }\n      })), React.createElement(View, null, React.createElement(TextInput, {\n        style: {\n          width: 200,\n          height: 40,\n          borderWidth: 1.5,\n          fontSize: 20\n        },\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            passPhrase: password\n          });\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.go(_this2.state.mail, _this2.state.passPhrase);\n        }\n      }, React.createElement(Text, null, \"Login\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/Volumes/Coding/NPM/Class Projects/C-73-/components/Login.js"],"names":["React","firebase","Login","go","mail","passPhrase","auth","signInWithEmailAndPassword","message","props","navigation","navigate","code","Alert","alert","state","alignContent","height","width","require","borderWidth","fontSize","mailid","setState","password","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;;;;AAcA,OAAOC,QAAP,MAAqB,UAArB;;IAEqBC,K;;;;;AAEjB,mBAAc;AAAA;;AAAA;;AACV;;AADU,UASdC,EATc,GASV,iBAAOC,IAAP,EAAaC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACID,IAAI,EAAEC,UADV;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+CAG8BJ,QAAQ,CAACK,IAAT,GAAiBC,0BAAjB,CAA4CH,IAA5C,EAAkDC,UAAlD,CAH9B;;AAAA;AAGcG,cAAAA,OAHd;;AAIQ,kBAAIA,OAAJ,EAAY;AACR,sBAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B;AACH;;AANT;AAAA;;AAAA;AAAA;AAAA;AAAA,4BASgB,YAAMC,IATtB;AAAA,8CAUiB,uBAVjB,wBAaiB,kBAbjB;AAAA;;AAAA;AAWYC,cAAAA,KAAK,CAACC,KAAN,CAAa,iBAAb;AAXZ;;AAAA;AAcYD,cAAAA,KAAK,CAACC,KAAN,CAAa,oBAAb;AAdZ;;AAAA;AAAA;AAAA;;AAAA;AAoBKD,cAAAA,KAAK,CAACC,KAAN,CAAY,uCAAZ;;AApBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATU;;AAEV,UAAKC,KAAL,GAAa;AACTX,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,UAAU,EAAG;AAFJ,KAAb;AAFU;AAMb;;;;WA4BD,kBAAS;AAAA;;AACL,aACI,oBAAC,oBAAD;AAAsB,QAAA,KAAK,EAAE;AAAEW,UAAAA,YAAY,EAAE;AAAhB,SAA7B;AAAyD,QAAA,QAAQ,EAAC;AAAlE,SACI,oBAAC,IAAD,QACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SADX;AAEI,QAAA,MAAM,EAAEC,OAAO;AAFnB,QADJ,CADJ,EAMI,oBAAC,IAAD,QACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE,GAAT;AAAcD,UAAAA,MAAM,EAAE,EAAtB;AAA0BG,UAAAA,WAAW,EAAE,GAAvC;AAA4CC,UAAAA,QAAQ,EAAE;AAAtD,SADX;AAEI,QAAA,WAAW,EAAC,WAFhB;AAE4B,QAAA,YAAY,EAAE,sBAAAC,MAAM;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEnB,YAAAA,IAAI,EAAGkB;AAAT,WAAd,CAAJ;AAAA;AAFhD,QADJ,CANJ,EAYW,oBAAC,IAAD,QACH,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAAE,GAAT;AAAcD,UAAAA,MAAM,EAAE,EAAtB;AAA0BG,UAAAA,WAAW,EAAE,GAAvC;AAA4CC,UAAAA,QAAQ,EAAE;AAAtD,SADX;AAEI,QAAA,WAAW,EAAC,UAFhB;AAE2B,QAAA,YAAY,EAAE,sBAAAG,QAAQ;AAAA,iBAAI,MAAI,CAACD,QAAL,CAAc;AAAElB,YAAAA,UAAU,EAAGmB;AAAf,WAAd,CAAJ;AAAA;AAFjD,QADG,CAZX,EAmBI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACrB,EAAL,CAAQ,MAAI,CAACY,KAAL,CAAWX,IAAnB,EAAyB,MAAI,CAACW,KAAL,CAAWV,UAApC;AAAgD;AAAnF,SACI,oBAAC,IAAD,gBADJ,CAnBJ,CADJ;AAyBH;;;;EA9D8BoB,S;;SAAdvB,K","sourcesContent":["import * as React from 'react';\nimport {\n    Button,\n    View,\n    StyleSheet,\n    TouchableOpacity,\n    Text,\n    Alert,\n    Image,\n    TextInput,\n    KeyboardAvoidingView,\n    ToastAndroid\n\n} from 'react-native';\nimport firebase from \"firebase\"\n\nexport default class Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            mail: \"\", \n            passPhrase : \"\"\n        };\n    }\n\n\n    go= async (mail, passPhrase) => {\n        if (mail, passPhrase) {\n            try {\n                const message = await firebase.auth ().signInWithEmailAndPassword(mail, passPhrase)\n                if (message){\n                    this.props.navigation.navigate(\"Transaction\")\n                }\n            }\n            catch(error){\n                switch (error.code){\n                    case \"YOU ARE A GHOST TO ME\": \n                    Alert.alert (\"Ghost !!! !!!! \")\n                    break ; \n                    case \"BUDDY TYPE RIGHT\": \n                    Alert.alert (\"UR TYPING SUCKS!!!\")\n                    break ; \n                }\n            }\n        }\n        else{\n            {Alert.alert(\"EMAILI AND PASSWORD PLEASE!!!!!!!!!!!\")}\n        }\n\n    }\n\n    render() {\n        return (\n            <KeyboardAvoidingView style={{ alignContent: \"center\" }} behavior=\"padding\" >\n                <View>\n                    <Image\n                        style={{ height: 300, width: 300 }}\n                        source={require('../logo.png')}></Image>\n                </View>\n                <View>\n                    <TextInput\n                        style={{ width: 200, height: 40, borderWidth: 1.5, fontSize: 20 }}\n                        placeholder=\"Email ID \" onChangeText={mailid => this.setState({ mail : mailid })}>\n                    </TextInput>\n\n                </View><View>\n                    <TextInput\n                        style={{ width: 200, height: 40, borderWidth: 1.5, fontSize: 20 }}\n                        placeholder=\"Password\" onChangeText={password => this.setState({ passPhrase : password })}>\n                    </TextInput>\n\n                </View>\n                <TouchableOpacity onPress={() => { this.go(this.state.mail, this.state.passPhrase)}}>\n                    <Text>Login</Text>\n                </TouchableOpacity>\n            </KeyboardAvoidingView>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}